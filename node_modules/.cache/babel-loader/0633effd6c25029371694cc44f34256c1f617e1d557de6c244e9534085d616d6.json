{"ast":null,"code":"var _jsxFileName = \"/Users/pro/Desktop/qr-frontend-test/src/QRCodeGenerator.js\",\n  _s = $RefreshSig$();\n// src/QRCodeGenerator.js\nimport axios from 'axios';\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QRCodeGenerator = () => {\n  _s();\n  const [landingUrl, setLandingUrl] = useState('');\n  const [qrCode, setQrCode] = useState('');\n  const [qrCodeId, setQrCodeId] = useState('');\n  const [message, setMessage] = useState('');\n  const handleGenerate = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.post('http://localhost:5000/api/generate', {\n        landing_url: landingUrl\n      });\n      setQrCode(response.data.newQr.qr_code_image);\n      setQrCodeId(response.data.newQr._id);\n      setMessage(response.data.message);\n    } catch (error) {\n      setMessage(error.response.data.message);\n    }\n  };\n  const handleUpdate = async e => {\n    e.preventDefault();\n    try {\n      await axios.put(`http://localhost:7000/api/qrcode/${qrCodeId}`, {\n        landing_url: landingUrl\n      });\n      setMessage('QR code updated successfully');\n    } catch (error) {\n      setMessage(error.response.data.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"QR Code Generator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleGenerate,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: landingUrl,\n        onChange: e => setLandingUrl(e.target.value),\n        placeholder: \"Enter landing URL\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Generate QR Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), qrCode && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Generated QR Code:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: qrCode,\n        alt: \"QR Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }, this), qrCodeId && /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleUpdate,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Update QR Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: landingUrl,\n        onChange: e => setLandingUrl(e.target.value),\n        placeholder: \"Update landing URL\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Update QR Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n_s(QRCodeGenerator, \"isREQSAdmZ4KL32mHNA+lw8RbAQ=\");\n_c = QRCodeGenerator;\nexport default QRCodeGenerator;\nvar _c;\n$RefreshReg$(_c, \"QRCodeGenerator\");","map":{"version":3,"names":["axios","React","useState","jsxDEV","_jsxDEV","QRCodeGenerator","_s","landingUrl","setLandingUrl","qrCode","setQrCode","qrCodeId","setQrCodeId","message","setMessage","handleGenerate","e","preventDefault","response","post","landing_url","data","newQr","qr_code_image","_id","error","handleUpdate","put","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","placeholder","required","src","alt","_c","$RefreshReg$"],"sources":["/Users/pro/Desktop/qr-frontend-test/src/QRCodeGenerator.js"],"sourcesContent":["// src/QRCodeGenerator.js\nimport axios from 'axios';\nimport React, { useState } from 'react';\n\nconst QRCodeGenerator = () => {\n    const [landingUrl, setLandingUrl] = useState('');\n    const [qrCode, setQrCode] = useState('');\n    const [qrCodeId, setQrCodeId] = useState('');\n    const [message, setMessage] = useState('');\n\n    const handleGenerate = async (e) => {\n        e.preventDefault();\n        try {\n            const response = await axios.post('http://localhost:5000/api/generate', { landing_url: landingUrl });\n            setQrCode(response.data.newQr.qr_code_image);\n            setQrCodeId(response.data.newQr._id);\n            setMessage(response.data.message);\n        } catch (error) {\n            setMessage(error.response.data.message);\n        }\n    };\n\n    const handleUpdate = async (e) => {\n        e.preventDefault();\n        try {\n            await axios.put(`http://localhost:7000/api/qrcode/${qrCodeId}`, { landing_url: landingUrl });\n            setMessage('QR code updated successfully');\n        } catch (error) {\n            setMessage(error.response.data.message);\n        }\n    };\n\n    return (\n        <div>\n            <h1>QR Code Generator</h1>\n            <form onSubmit={handleGenerate}>\n                <input\n                    type=\"text\"\n                    value={landingUrl}\n                    onChange={(e) => setLandingUrl(e.target.value)}\n                    placeholder=\"Enter landing URL\"\n                    required\n                />\n                <button type=\"submit\">Generate QR Code</button>\n            </form>\n\n            {qrCode && (\n                <div>\n                    <h2>Generated QR Code:</h2>\n                    <img src={qrCode} alt=\"QR Code\" />\n                </div>\n            )}\n\n            {qrCodeId && (\n                <form onSubmit={handleUpdate}>\n                    <h3>Update QR Code</h3>\n                    <input\n                        type=\"text\"\n                        value={landingUrl}\n                        onChange={(e) => setLandingUrl(e.target.value)}\n                        placeholder=\"Update landing URL\"\n                        required\n                    />\n                    <button type=\"submit\">Update QR Code</button>\n                </form>\n            )}\n\n            {message && <p>{message}</p>}\n        </div>\n    );\n};\n\nexport default QRCodeGenerator;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}