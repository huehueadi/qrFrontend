{"ast":null,"code":"var _jsxFileName = \"/Users/pro/Desktop/qr-frontend-test/src/RedirectQr.js\",\n  _s = $RefreshSig$();\n// src/components/QRScanner.js\n\nimport axios from 'axios';\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RedirectQr = () => {\n  _s();\n  const [qrId, setQrId] = useState('');\n  const handleScanQRCode = async () => {\n    try {\n      const response = await axios.get(`http://localhost:7000/api/redirect/${qrId}`);\n      if (response.status === 200 && response.data.redirectUrl) {\n        window.location.href = response.data.redirectUrl; // Redirect to the URL from the backend\n      } else {\n        console.error('Redirect URL not found');\n      }\n    } catch (error) {\n      console.error('QR redirection failed', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Scan QR Code\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"QR ID\",\n      value: qrId,\n      onChange: e => setQrId(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleScanQRCode,\n      children: \"Simulate Scan\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n_s(RedirectQr, \"g86iDGld698u8YsMMk3wA7oCsR8=\");\n_c = RedirectQr;\nexport default RedirectQr;\nvar _c;\n$RefreshReg$(_c, \"RedirectQr\");","map":{"version":3,"names":["axios","React","useState","jsxDEV","_jsxDEV","RedirectQr","_s","qrId","setQrId","handleScanQRCode","response","get","status","data","redirectUrl","window","location","href","console","error","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","required","onClick","_c","$RefreshReg$"],"sources":["/Users/pro/Desktop/qr-frontend-test/src/RedirectQr.js"],"sourcesContent":["// src/components/QRScanner.js\n\nimport axios from 'axios';\nimport React, { useState } from 'react';\n\nconst RedirectQr = () => {\n    const [qrId, setQrId] = useState('');\n\n    const handleScanQRCode = async () => {\n        try {\n            const response = await axios.get(`http://localhost:7000/api/redirect/${qrId}`);\n            if (response.status === 200 && response.data.redirectUrl) {\n                window.location.href = response.data.redirectUrl; // Redirect to the URL from the backend\n            } else {\n                console.error('Redirect URL not found');\n            }\n        } catch (error) {\n            console.error('QR redirection failed', error);\n        }\n    };\n\n    return (\n        <div>\n            <h2>Scan QR Code</h2>\n            <input\n                type=\"text\"\n                placeholder=\"QR ID\"\n                value={qrId}\n                onChange={(e) => setQrId(e.target.value)}\n                required\n            />\n            <button onClick={handleScanQRCode}>Simulate Scan</button>\n        </div>\n    );\n};\n\nexport default RedirectQr;\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAEpC,MAAMO,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,GAAG,CAAC,sCAAsCJ,IAAI,EAAE,CAAC;MAC9E,IAAIG,QAAQ,CAACE,MAAM,KAAK,GAAG,IAAIF,QAAQ,CAACG,IAAI,CAACC,WAAW,EAAE;QACtDC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAGP,QAAQ,CAACG,IAAI,CAACC,WAAW,CAAC,CAAC;MACtD,CAAC,MAAM;QACHI,OAAO,CAACC,KAAK,CAAC,wBAAwB,CAAC;MAC3C;IACJ,CAAC,CAAC,OAAOA,KAAK,EAAE;MACZD,OAAO,CAACC,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IACjD;EACJ,CAAC;EAED,oBACIf,OAAA;IAAAgB,QAAA,gBACIhB,OAAA;MAAAgB,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrBpB,OAAA;MACIqB,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,OAAO;MACnBC,KAAK,EAAEpB,IAAK;MACZqB,QAAQ,EAAGC,CAAC,IAAKrB,OAAO,CAACqB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MACzCI,QAAQ;IAAA;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACX,CAAC,eACFpB,OAAA;MAAQ4B,OAAO,EAAEvB,gBAAiB;MAAAW,QAAA,EAAC;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxD,CAAC;AAEd,CAAC;AAAClB,EAAA,CA7BID,UAAU;AAAA4B,EAAA,GAAV5B,UAAU;AA+BhB,eAAeA,UAAU;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}