{"ast":null,"code":"var _jsxFileName = \"/Users/pro/Desktop/qr-frontend-test/src/QRCodeGenerator.js\",\n  _s = $RefreshSig$();\n// src/QrCodeGenerator.js\nimport { QRCodeSVG } from 'qrcode.react'; // Use QRCodeSVG for rendering\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QrCodeGenerator = () => {\n  _s();\n  const [url, setUrl] = useState(''); // State to hold the input URL\n  const [showQrCode, setShowQrCode] = useState(false); // State to control QR code display\n\n  const handleChange = e => {\n    setUrl(e.target.value); // Update URL state as user types\n  };\n  const handleGenerate = () => {\n    // Generate QR code only if the URL is valid (optional)\n    if (url) {\n      setShowQrCode(true);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"qr-code-generator\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"QR Code Generator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter URL\",\n      value: url,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleGenerate,\n      children: \"Generate QR Code\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), showQrCode && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"qr-code\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Scan the QR code to visit:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: url,\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: url\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(QRCodeSVG, {\n        value: url,\n        size: 256\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n_s(QrCodeGenerator, \"HbGYrkUENDJtPDRaYbHLVp2gYZ4=\");\n_c = QrCodeGenerator;\nexport default QrCodeGenerator;\nvar _c;\n$RefreshReg$(_c, \"QrCodeGenerator\");","map":{"version":3,"names":["QRCodeSVG","React","useState","jsxDEV","_jsxDEV","QrCodeGenerator","_s","url","setUrl","showQrCode","setShowQrCode","handleChange","e","target","value","handleGenerate","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","onClick","href","rel","size","_c","$RefreshReg$"],"sources":["/Users/pro/Desktop/qr-frontend-test/src/QRCodeGenerator.js"],"sourcesContent":["// src/QrCodeGenerator.js\nimport { QRCodeSVG } from 'qrcode.react'; // Use QRCodeSVG for rendering\nimport React, { useState } from 'react';\n\nconst QrCodeGenerator = () => {\n    const [url, setUrl] = useState(''); // State to hold the input URL\n    const [showQrCode, setShowQrCode] = useState(false); // State to control QR code display\n\n    const handleChange = (e) => {\n        setUrl(e.target.value); // Update URL state as user types\n    };\n\n    const handleGenerate = () => {\n        // Generate QR code only if the URL is valid (optional)\n        if (url) {\n            setShowQrCode(true);\n        }\n    };\n\n    return (\n        <div className=\"qr-code-generator\">\n            <h1>QR Code Generator</h1>\n            <input\n                type=\"text\"\n                placeholder=\"Enter URL\"\n                value={url}\n                onChange={handleChange}\n            />\n            <button onClick={handleGenerate}>Generate QR Code</button>\n            {showQrCode && (\n                <div className=\"qr-code\">\n                    <p>Scan the QR code to visit:</p>\n                    <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">{url}</a>\n                    <QRCodeSVG value={url} size={256} />\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default QrCodeGenerator;\n"],"mappings":";;AAAA;AACA,SAASA,SAAS,QAAQ,cAAc,CAAC,CAAC;AAC1C,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EACpC,MAAM,CAACO,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;;EAErD,MAAMS,YAAY,GAAIC,CAAC,IAAK;IACxBJ,MAAM,CAACI,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;EAC5B,CAAC;EAED,MAAMC,cAAc,GAAGA,CAAA,KAAM;IACzB;IACA,IAAIR,GAAG,EAAE;MACLG,aAAa,CAAC,IAAI,CAAC;IACvB;EACJ,CAAC;EAED,oBACIN,OAAA;IAAKY,SAAS,EAAC,mBAAmB;IAAAC,QAAA,gBAC9Bb,OAAA;MAAAa,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1BjB,OAAA;MACIkB,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,WAAW;MACvBT,KAAK,EAAEP,GAAI;MACXiB,QAAQ,EAAEb;IAAa;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC,eACFjB,OAAA;MAAQqB,OAAO,EAAEV,cAAe;MAAAE,QAAA,EAAC;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACzDZ,UAAU,iBACPL,OAAA;MAAKY,SAAS,EAAC,SAAS;MAAAC,QAAA,gBACpBb,OAAA;QAAAa,QAAA,EAAG;MAA0B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eACjCjB,OAAA;QAAGsB,IAAI,EAAEnB,GAAI;QAACM,MAAM,EAAC,QAAQ;QAACc,GAAG,EAAC,qBAAqB;QAAAV,QAAA,EAAEV;MAAG;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACjEjB,OAAA,CAACJ,SAAS;QAACc,KAAK,EAAEP,GAAI;QAACqB,IAAI,EAAE;MAAI;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnC,CACR;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAACf,EAAA,CAlCID,eAAe;AAAAwB,EAAA,GAAfxB,eAAe;AAoCrB,eAAeA,eAAe;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}