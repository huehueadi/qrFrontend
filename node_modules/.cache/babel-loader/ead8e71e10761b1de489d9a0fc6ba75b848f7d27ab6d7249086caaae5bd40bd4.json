{"ast":null,"code":"var _jsxFileName = \"/Users/pro/Desktop/qr-frontend-test/src/QRCodeGenerator.js\",\n  _s = $RefreshSig$();\nimport { QRCodeCanvas } from 'qrcode.react'; // or use QRCodeSVG if you prefer SVG output\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DynamicQRCodeGenerator = () => {\n  _s();\n  // State to hold the URL entered by the user\n  const [url, setUrl] = useState('');\n  // State to track when to show the QR code\n  const [generate, setGenerate] = useState(false);\n\n  // Function to handle changes in the input field\n  const handleUrlChange = event => {\n    setUrl(event.target.value); // Update the URL state with user input\n  };\n\n  // Function to handle the button click\n  const handleGenerateClick = () => {\n    if (url) {\n      setGenerate(true); // Trigger QR code generation\n    } else {\n      alert('Please enter a valid URL.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px',\n      textAlign: 'center'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Dynamic QR Code Generator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: url,\n      onChange: handleUrlChange // Update the URL when the input changes\n      ,\n      placeholder: \"Enter URL here\",\n      style: {\n        width: '300px',\n        height: '30px',\n        fontSize: '16px',\n        padding: '5px',\n        marginBottom: '20px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleGenerateClick,\n      style: {\n        padding: '10px 20px',\n        fontSize: '16px',\n        cursor: 'pointer',\n        backgroundColor: '#4CAF50',\n        color: 'white',\n        border: 'none',\n        borderRadius: '5px'\n      },\n      children: \"Generate QR Code\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), generate && url && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Generated QR Code:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(QRCodeCanvas, {\n        value: url // The URL entered by the user is the data for the QR code\n        ,\n        size: 256 // Size of the QR code\n        ,\n        level: \"H\" // Error correction level (H is the highest)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this), generate && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        marginTop: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"QR Code for:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this), \" \", url]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(DynamicQRCodeGenerator, \"C7h9vujWjOp5M/LT7rcUhaS35tI=\");\n_c = DynamicQRCodeGenerator;\nexport default DynamicQRCodeGenerator;\nvar _c;\n$RefreshReg$(_c, \"DynamicQRCodeGenerator\");","map":{"version":3,"names":["QRCodeCanvas","React","useState","jsxDEV","_jsxDEV","DynamicQRCodeGenerator","_s","url","setUrl","generate","setGenerate","handleUrlChange","event","target","value","handleGenerateClick","alert","style","padding","textAlign","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","placeholder","width","height","fontSize","marginBottom","onClick","cursor","backgroundColor","color","border","borderRadius","size","level","marginTop","_c","$RefreshReg$"],"sources":["/Users/pro/Desktop/qr-frontend-test/src/QRCodeGenerator.js"],"sourcesContent":["import { QRCodeCanvas } from 'qrcode.react'; // or use QRCodeSVG if you prefer SVG output\nimport React, { useState } from 'react';\n\nconst DynamicQRCodeGenerator = () => {\n  // State to hold the URL entered by the user\n  const [url, setUrl] = useState('');\n  // State to track when to show the QR code\n  const [generate, setGenerate] = useState(false);\n\n  // Function to handle changes in the input field\n  const handleUrlChange = (event) => {\n    setUrl(event.target.value); // Update the URL state with user input\n  };\n\n  // Function to handle the button click\n  const handleGenerateClick = () => {\n    if (url) {\n      setGenerate(true); // Trigger QR code generation\n    } else {\n      alert('Please enter a valid URL.');\n    }\n  };\n\n  return (\n    <div style={{ padding: '20px', textAlign: 'center' }}>\n      <h2>Dynamic QR Code Generator</h2>\n\n      {/* Input field for the URL */}\n      <input\n        type=\"text\"\n        value={url}\n        onChange={handleUrlChange} // Update the URL when the input changes\n        placeholder=\"Enter URL here\"\n        style={{ width: '300px', height: '30px', fontSize: '16px', padding: '5px', marginBottom: '20px' }}\n      />\n\n      {/* Generate Button */}\n      <button\n        onClick={handleGenerateClick}\n        style={{\n          padding: '10px 20px',\n          fontSize: '16px',\n          cursor: 'pointer',\n          backgroundColor: '#4CAF50',\n          color: 'white',\n          border: 'none',\n          borderRadius: '5px',\n        }}\n      >\n        Generate QR Code\n      </button>\n\n      {/* Only show QR code after the button is clicked */}\n      {generate && url && (\n        <div>\n          <h3>Generated QR Code:</h3>\n          <QRCodeCanvas\n            value={url} // The URL entered by the user is the data for the QR code\n            size={256} // Size of the QR code\n            level=\"H\" // Error correction level (H is the highest)\n          />\n        </div>\n      )}\n\n      {/* Optional: Display the URL below the QR code */}\n      {generate && (\n        <p style={{ marginTop: '20px' }}>\n          <strong>QR Code for:</strong> {url}\n        </p>\n      )}\n    </div>\n  );\n};\n\nexport default DynamicQRCodeGenerator;\n"],"mappings":";;AAAA,SAASA,YAAY,QAAQ,cAAc,CAAC,CAAC;AAC7C,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,sBAAsB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnC;EACA,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAClC;EACA,MAAM,CAACO,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;;EAE/C;EACA,MAAMS,eAAe,GAAIC,KAAK,IAAK;IACjCJ,MAAM,CAACI,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;EAC9B,CAAC;;EAED;EACA,MAAMC,mBAAmB,GAAGA,CAAA,KAAM;IAChC,IAAIR,GAAG,EAAE;MACPG,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC;IACrB,CAAC,MAAM;MACLM,KAAK,CAAC,2BAA2B,CAAC;IACpC;EACF,CAAC;EAED,oBACEZ,OAAA;IAAKa,KAAK,EAAE;MAAEC,OAAO,EAAE,MAAM;MAAEC,SAAS,EAAE;IAAS,CAAE;IAAAC,QAAA,gBACnDhB,OAAA;MAAAgB,QAAA,EAAI;IAAyB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAGlCpB,OAAA;MACEqB,IAAI,EAAC,MAAM;MACXX,KAAK,EAAEP,GAAI;MACXmB,QAAQ,EAAEf,eAAgB,CAAC;MAAA;MAC3BgB,WAAW,EAAC,gBAAgB;MAC5BV,KAAK,EAAE;QAAEW,KAAK,EAAE,OAAO;QAAEC,MAAM,EAAE,MAAM;QAAEC,QAAQ,EAAE,MAAM;QAAEZ,OAAO,EAAE,KAAK;QAAEa,YAAY,EAAE;MAAO;IAAE;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnG,CAAC,eAGFpB,OAAA;MACE4B,OAAO,EAAEjB,mBAAoB;MAC7BE,KAAK,EAAE;QACLC,OAAO,EAAE,WAAW;QACpBY,QAAQ,EAAE,MAAM;QAChBG,MAAM,EAAE,SAAS;QACjBC,eAAe,EAAE,SAAS;QAC1BC,KAAK,EAAE,OAAO;QACdC,MAAM,EAAE,MAAM;QACdC,YAAY,EAAE;MAChB,CAAE;MAAAjB,QAAA,EACH;IAED;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAGRf,QAAQ,IAAIF,GAAG,iBACdH,OAAA;MAAAgB,QAAA,gBACEhB,OAAA;QAAAgB,QAAA,EAAI;MAAkB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC3BpB,OAAA,CAACJ,YAAY;QACXc,KAAK,EAAEP,GAAI,CAAC;QAAA;QACZ+B,IAAI,EAAE,GAAI,CAAC;QAAA;QACXC,KAAK,EAAC,GAAG,CAAC;MAAA;QAAAlB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACX,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CACN,EAGAf,QAAQ,iBACPL,OAAA;MAAGa,KAAK,EAAE;QAAEuB,SAAS,EAAE;MAAO,CAAE;MAAApB,QAAA,gBAC9BhB,OAAA;QAAAgB,QAAA,EAAQ;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,KAAC,EAACjB,GAAG;IAAA;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC,CACJ;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAClB,EAAA,CArEID,sBAAsB;AAAAoC,EAAA,GAAtBpC,sBAAsB;AAuE5B,eAAeA,sBAAsB;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}